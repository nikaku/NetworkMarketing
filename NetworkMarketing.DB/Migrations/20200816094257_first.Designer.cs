// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetworkMarketing.DB;

namespace NetworkMarketing.DB.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200816094257_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NetworkMarketing.BL.Entities.AddressInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("addressType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AddressInfo");
                });

            modelBuilder.Entity("NetworkMarketing.BL.Entities.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContactType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ContactInfo");
                });

            modelBuilder.Entity("NetworkMarketing.BL.Entities.Distributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("IdentityInfoId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecomendatorId")
                        .HasColumnType("int");

                    b.Property<int>("ReferalLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressInfoId");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("IdentityInfoId");

                    b.HasIndex("RecomendatorId");

                    b.ToTable("Distributors");
                });

            modelBuilder.Entity("NetworkMarketing.BL.Entities.IdentityInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdentityType")
                        .HasColumnType("int");

                    b.Property<string>("Issuer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.Property<string>("Serie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("IdentityInfo");
                });

            modelBuilder.Entity("NetworkMarketing.BL.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("NetworkMarketing.BL.Entities.SalesOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistributorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DistributorId");

                    b.ToTable("SalesOrders");
                });

            modelBuilder.Entity("NetworkMarketing.BL.Entities.Distributor", b =>
                {
                    b.HasOne("NetworkMarketing.BL.Entities.AddressInfo", "AddressInfo")
                        .WithMany()
                        .HasForeignKey("AddressInfoId");

                    b.HasOne("NetworkMarketing.BL.Entities.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("NetworkMarketing.BL.Entities.IdentityInfo", "IdentityInfo")
                        .WithMany()
                        .HasForeignKey("IdentityInfoId");

                    b.HasOne("NetworkMarketing.BL.Entities.Distributor", "Recomendator")
                        .WithMany()
                        .HasForeignKey("RecomendatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("NetworkMarketing.BL.Entities.Item", b =>
                {
                    b.HasOne("NetworkMarketing.BL.Entities.SalesOrder", null)
                        .WithMany("Rows")
                        .HasForeignKey("SalesOrderId");
                });

            modelBuilder.Entity("NetworkMarketing.BL.Entities.SalesOrder", b =>
                {
                    b.HasOne("NetworkMarketing.BL.Entities.Distributor", "Distributor")
                        .WithMany()
                        .HasForeignKey("DistributorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
